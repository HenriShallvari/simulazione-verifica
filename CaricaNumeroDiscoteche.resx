<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        f4H//n+B//5/5//wD+f/8A////AP//////8=
</value>
  </data>
</root>